#-*- coding:utf-8 -*-
#!/usr/bin/python
'''
模型正则化 Regularization 提高模型的泛化Generalization能力 
避免参数模型过拟合  Overfitting
'''
# 比萨数据  直径和对应售价
# 输入训练样本的特征以及目标值，分别存储在变量X_train与y_train之中
X_train = [[6], [8], [10], [14], [18]]
y_train = [[7], [9], [13], [17.5], [18]]

# 从sklearn.linear_model中导入LinearRegression
from sklearn.linear_model import LinearRegression
# 使用默认配置初始化线性回归模型
regressor = LinearRegression()
# 直接以披萨的直径作为特征训练模型
regressor.fit(X_train, y_train)

# 导入numpy并且重命名为np
import numpy as np
# 在x轴上从0至25均匀采样100个数据点
xx = np.linspace(0, 26, 100)
xx = xx.reshape(xx.shape[0], 1)#转换成一列

# 以上述100个数据点作为基准，预测回归直线
yy = regressor.predict(xx)
# 对回归预测到的直线进行作图
import matplotlib.pyplot as plt#画图
plt.scatter(X_train, y_train)#样本数据散点图
plt1, = plt.plot(xx, yy, label=\"Degree=1\")#图例
plt.axis([0, 25, 0, 25])# 图大小
plt.xlabel(u'比萨直径')
plt.ylabel(u'售价')
plt.legend(handles = [plt1])
plt.show()

print '线性回归准确度： ', regressor.score(X_train, y_train)



